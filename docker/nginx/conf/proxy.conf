upstream api-main {
        server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:8081 weight=1 max_fails=3 fail_timeout=10s;
}

upstream api-test {
        server 127.0.0.1:8090 weight=1 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:8091 weight=1 max_fails=3 fail_timeout=10s;
}

server {
    listen 443 ssl;
    server_name api.classconnect.kr;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/$host/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_param /etc/letsencrypt/ssl-dhparams.pem;


    location /api {
        proxy_pass  http://api-main;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    set $webp_suffix "";
    if ($http_accept ~* "webp") {
            set $webp_suffix ".webp";
    }

    location ~ \.(gif|jpe?g|png)$ {
            add_header Cache-Control "public, no-transform";
            try_files $uri$webp_suffix $uri $uri/ =404;
            expires max;
    }
}

server {
    listen 8443 ssl;
    server_name test.classconnect.kr;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/$host/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;


    location /api {
        proxy_pass  http://api-test;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    set $webp_suffix "";
    if ($http_accept ~* "webp") {
            set $webp_suffix ".webp";
    }

    location ~ \.(gif|jpe?g|png)$ {
            add_header Cache-Control "public, no-transform";
            try_files $uri$webp_suffix $uri $uri/ =404;
            expires max;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name $host;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}